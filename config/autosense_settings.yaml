api:
    title: Autosense API
    summary: API for the Autosense handheld device
    version: 1.0.1
    description: |
        # Autosense API

        **Autosense API** is the main interface for interacting with the handheld device. It provides endpoints to:

        * List and inspect installed sensors
        * Monitor ROS topics in real time
        * Start, stop, and restart device services (including ROS nodes and launch files)
        * Record and manage ROS bag files
        * Check system status and metadata
        * Trigger system-level actions like rebooting or powering off the onboard computer (WIP)

        For the device documentation and detailed usage, visit the /docs endpoint

    docs_url: /api/docs
    openapi_url: /api/openapi.json
    debug: false

    # Use this to enable CORS for the API, for the given origins
    allowed_origins:
        - "http://localhost"
        - "http://localhost:5173"
        - "http://localhost:4173"

managers:
    # Add the services to be available in the API. Can be Basic Sevices or RosServices
    services:
        - name: Ouster LiDAR
          id: lidar_srv
          auto_start: false
          restart_on_failure: false
          exec_type: "LAUNCH"
          ws: "$HOME/AutoSense/ros_ws"
          pkg_name: "autosense_bringup"
          exec: "lidar.launch.py"
          env:
              RMW_IMPLEMENTATION: rmw_cyclonedds_cpp

        - name: Realsense D435i Camera
          id: realsense_camera_srv
          auto_start: false
          restart_on_failure: false
          exec_type: "LAUNCH"
          ws: "$HOME/AutoSense/ros_ws"
          pkg_name: "smapper_bringup"
          exec: "rs_launch.py"
          env:
              RMW_IMPLEMENTATION: rmw_cyclonedds_cpp

        - name: Odometry (FastLIO)
          id: odom_gen_srv
          auto_start: false
          restart_on_failure: false
          exec_type: "LAUNCH"
          ws: "$HOME/ros_ws"
          pkg_name: "fast_lio"
          exec: "mapping.launch.py rviz:=false config_file:=ouster64.yaml"
          env:
              RMW_IMPLEMENTATION: rmw_cyclonedds_cpp

        - name: SGraphs 2.0
          id: s_graphs_srv
          auto_start: false
          restart_on_failure: false
          exec_type: "LAUNCH"
          ws: "$HOME/ros_ws"
          pkg_name: "lidar_situational_graphs"
          exec: "s_graphs_launch.py lidar_topic:=/cloud/undistorted imu_topic:=/ouster/imu base_frame:=base_link compute_odom:=false"
          env:
              RMW_IMPLEMENTATION: rmw_cyclonedds_cpp

    ros:
        topic_monitor:
            topics_blacklist:
                - /rosout*
                - /parameter_events
                - ^/ouster/(?!points$|imu$).*
                - ^/camera/.*/(?!.*image_raw$).*
            monitor_rate: 2 # Seconds
            discover_rate: 5 # Seconds
            idle_timeout: 5 # Seconds

        bag_recorder:
            storage_dir: "$HOME/BagStorage/"
            env:
                RMW_IMPLEMENTATION: rmw_cyclonedds_cpp

# Metadata about the device
device:
    name: SMapper
    revision: "2.1"

    onboard_pc:
        model: Jetson AGX Orin Development Kit

    sensors:
        - name: lidar
          model: Ouster OS0-64
          type: LIDAR
          service_id: lidar_srv

        - name: argus_cameras
          model: e-CAM200_CUOAGX
          type: CAMERA
          service_id: cameras_srv
